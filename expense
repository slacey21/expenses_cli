#!/usr/bin/env node

const { Client } = require('pg');
const PROCESS = require('process');

function logAndExit(error) {
  console.log(error);
  PROCESS.exit(1);
}

class ExpenseData {
  constructor() {
    this.client = new Client({ database: 'expenses_cli' });
  }

  async listExpenses() {
    await this.client.connect().catch(err => logAndExit(err));

    let response = await this.client.query('SELECT * FROM expenses ORDER BY created_on')
                                    .catch(err => logAndExit(err));
    
    response.rows.forEach(tuple => {
      let columns = [
        `${tuple.id}`.padStart(3),
        tuple.created_on.toDateString().padStart(10),
        tuple.amount.padStart(12),
        tuple.memo
      ];
      
      console.log(columns.join(' | '))
    });

    await this.client.end().catch(err => logAndExit(err));;
  }

  async addExpense(amount, memo) {
    await this.client.connect().catch(err => logAndExit(err));;
    
    let date = new Date().toLocaleDateString();

    let queryText = 'INSERT INTO expenses (created_on, amount, memo) VALUES ($1, $2, $3)';
    let values = [date, amount, memo];
    
    await this.client.query(queryText, values).catch(err => logAndExit(err));;
    
    await this.client.end().catch(err => logAndExit(err));
  }
}

class CLI {
  constructor() {
    this.application = new ExpenseData();
  }

  static HELP() {
    return `
      An expense recording system

      Commands:

      add AMOUNT MEMO [DATE] - record a new expense
      clear - delete all expenses
      list - list all expenses
      delete NUMBER - remove expense with id NUMBER
      search QUERY - list expenses with a matching memo field`;
  }

  displayHelp() {
    console.log(CLI.HELP());
  }

  run(args) {
    let command = args[2];

    if (command === 'help') {
      CLI.displayHelp();
    } else if (command === 'list') {
      this.application.listExpenses();
    } else if (command === 'add') {
      let amount = args[3];
      let memo = args[4];
      
      if (amount && memo) {
        this.application.addExpense(amount, memo);
      } else {
        console.log('You must provide an amount and memo.');
      }
    } 
  }
}

let args = PROCESS.argv;
let cli = new CLI();
cli.run(args);
