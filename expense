#!/usr/bin/env node

const { Client } = require('pg');
const PROCESS = require('process');
const client = new Client({
  database: 'expenses_cli'
});

const HELP = `
An expense recording system

Commands:

add AMOUNT MEMO [DATE] - record a new expense
clear - delete all expenses
list - list all expenses
delete NUMBER - remove expense with id NUMBER
search QUERY - list expenses with a matching memo field`;


function displayHelp() {
  console.log(HELP);
}

function logAndExit(error) {
  console.log(error);
  PROCESS.exit(1);
}

async function listExpenses() {
  await client.connect().catch(err => logAndExit(err));

  let response = await client.query('SELECT * FROM expenses ORDER BY created_on')
                             .catch(err => logAndExit(err));
  
  response.rows.forEach(tuple => {
    let columns = [
      `${tuple.id}`.padStart(3),
      tuple.created_on.toDateString().padStart(10),
      tuple.amount.padStart(12),
      tuple.memo
    ];
    
    console.log(columns.join(' | '))
  });

  await client.end().catch(err => logAndExit(err));;
};

async function addExpense(amount, memo) {
  await client.connect().catch(err => logAndExit(err));;
  
  let date = new Date().toLocaleDateString();

  let queryText = 'INSERT INTO expenses (created_on, amount, memo) VALUES ($1, $2, $3)';
  let values = [date, amount, memo];
  
  await client.query(queryText, values)
              .catch(err => logAndExit(err));;
  
  await client.end().catch(err => logAndExit(err));
}

let args = PROCESS.argv;
let command = args[2];

if (command === 'help') {
  displayHelp();
} else if (command === 'list') {
    listExpenses();
} else if (command === 'add') {
  let amount = args[3];
  let memo = args[4];
  
  if (amount && memo) {
    addExpense(amount, memo);
  } else {
    console.log('You must provide an amount and memo.');
  }
} 